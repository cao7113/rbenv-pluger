#!/usr/bin/env bash
set -e 

function usage() {
  cat <<-Doc
  Usage: $0 [--debug]

  available optional environments:
   * INSTALL_TYPE=user|system  default is system
   * PREFIX=/path/to/rbenv/prefix  default: /opt
   * RUBY_VERSION=2.0.0-p353 default  global installed ruby
   * RUBY_BUILD_CACHE_PATH  cache dir for package 
   * CONFIGURE_OPTS="--disable-install-doc"  do not install rdoc and C-api
   * RUBY_BUILD_MIRROR_URL=http://ruby.taobao.org/mirrors/ruby/ e.g RUBY_BUILD_MIRROR_URL=http://ruby.taobao.org/mirrors/ruby/ rbenv install -kv 2.0.0-p481

  run like: 

    RUBY_BUILD_CACHE_PATH=~/down RUBY_VERSION=2.0.0-p481 recipe/rbenv --debug
    
    or by url style:

    curl -Lv https://raw2.github.com/cao7113/rbenv-pluger/master/recipe/rbenv | RUBY_VERSION=2.1.0 RUBY_BUILD_CACHE_PATH=~/down bash

Doc
}
[ "$1" = "-h" -o "$1" = "--help" ] && usage && exit 1
[ "$1" = "-d" -o "$1" = "--debug" ] && set -x

install_type=${INSTALL_TYPE:-system}
rbenv_repo=${RBENV_REPO:-https://github.com/sstephenson/rbenv.git}
pluger_repo=${PLUGER_REPO:-https://github.com/cao7113/rbenv-pluger.git}
if [ -n "$RUBY_BUILD_CACHE_PATH" ];then
  [ -d "$RUBY_BUILD_CACHE_PATH" ]||mkdir -p "$RUBY_BUILD_CACHE_PATH"
  export RUBY_BUILD_CACHE_PATH
  echo ==using cache: $RUBY_BUILD_CACHE_PATH
fi
[ -n "$CONFIGURE_OPTS" ] &&  export CONFIGURE_OPTS

## prepare
which git >/dev/null || { echo No git installed! && exit 1; }
if [ -n "$PREFIX" ];then #prefer PREFIX
  rbenv_root=$PREFIX/rbenv
else
  case $install_type in
    user)
      rbenv_root=~/.rbenv
      ;;
    global|system)
      rbenv_root=/opt/rbenv
      ;;
    *)
      usage && exit 1
      ;;
  esac
fi
[ -d $rbenv_root ] && echo Has existed $rbenv_root! && exit 1
owner=${USER:-$LOGNAME} #override by env
perm="$owner:$owner"
cmd="mkdir -p $rbenv_root" && $cmd &>/dev/null || sudo $cmd 
[ "`stat --format '%U:%G' $rbenv_root`" = "$perm" ] || sudo chown -R $perm $rbenv_root
bin_rbenv=$rbenv_root/bin/rbenv

[ -d $rbenv_root/.git ] || { 
  git clone $rbenv_repo $rbenv_root 
  mkdir -p $rbenv_root/shims #for path
  mkdir -p $rbenv_root/cache && echo Recommend to use cache for ruby-build install
  plugins_root=$rbenv_root/plugins && mkdir -p $plugins_root
  pluger_root=$plugins_root/rbenv-pluger
  git clone $pluger_repo $pluger_root
  #set for default-gems
  if [ -f $pluger_root/etc/default-gems ];then
    ln -sb $pluger_root/etc/default-gems $rbenv_root/default-gems
  fi
  RBENV_ROOT=$rbenv_root $bin_rbenv pluger bundle default
  gemrc_file=$pluger_root/etc/dot.gemrc
  if [ -f $gemrc_file ];then
    [ -e ~/.gemrc ]||ln -sb $gemrc_file ~/.gemrc
    [ -e /etc/gemrc ]||sudo ln -sb $gemrc_file /etc/gemrc
  fi
  for f in irbrc railsrc rails.irbrc; do
    ln -sb $pluger_root/etc/dot.$f ~/.$f 
  done
}

echo ==Installed rbenv into $rbenv_root
$bin_rbenv --version #try

########################################
#     set shell init file
global_rbenv_file=/etc/profile.d/rbenv.sh
if [ "$install_type" != "user" -a ! -f $global_rbenv_file ];then
  tmpfile=/tmp/rbenv.rc
  cat <<-RCFILE >$tmpfile
#set rbenv generated by $0 on `date`
#[ -n "$RBENV_ROOT" ] && return #avoid twice sourced
export RBENV_ROOT=$rbenv_root #required
export PATH=\$RBENV_ROOT/shims:\$RBENV_ROOT/bin:\$PATH
RCFILE
  sudo mv -b $tmpfile $global_rbenv_file
  echo create global rbenv file: $global_rbenv_file !
fi

init_file=~/.bashrc
if grep -q "set rbenv" $init_file; then
  echo Has set rbenv in file: $init_file
else
  #take ssh in account, sourced before `return` statement in ~/.bashrc
  tmpfile=/tmp/my_bashrc
  echo >$tmpfile
  echo "#set rbenv generated by $0 on `date`" >> $tmpfile
  if [ ! "$install_type" = "user" ];then
    echo "[ -e $global_rbenv_file ] && source $global_rbenv_file" >> $tmpfile
  else #user install
    cat <<-RCFILE >>$tmpfile
export RBENV_ROOT=$rbenv_root
if [ -e \$RBENV_ROOT ]; then
  export PATH=\$RBENV_ROOT/bin:\$PATH
  eval \"\$(rbenv init -)\"
fi
RCFILE
  fi
  echo >>$tmpfile
  cat $tmpfile $init_file >$tmpfile.tmp && mv -b $tmpfile.tmp $init_file
  echo Set rbenv into file: $init_file, reshell to take effect!
fi

## install a ruby version, not work?
ruby_version=$RUBY_VERSION
if [ -n "$ruby_version" -a -f "$plugins_root/ruby-build/share/ruby-build/$ruby_version" ];then
  if [ ! -d `$bin_rbenv prefix $ruby_version` ];then
    RBENV_ROOT=$rbenv_root $bin_rbenv install -kv $ruby_version && $bin_rbenv global $ruby_version
  else
    echo Has exited `$bin_rbenv prefix $ruby_version`
  fi
fi

echo Ok, all things have done now with a new ruby version: $ruby_version! 
