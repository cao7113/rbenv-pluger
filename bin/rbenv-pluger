#!/usr/bin/env bash 
#
# Summary: manage rbenv plugins like rbenv mangage rubies
# 
# Usage: rbenv pluger l|list|available
#        rbenv pluger pluging|inuse|use
#        rbenv pluger i|install ruby-build
#        rbenv pluger rm|remove ruby-build 

set -e 
[ -n "$RBENV_DEBUG" ] && set -x

[ -n "$RBENV_ROOT" -a -d "$RBENV_ROOT" ] ||{ echo No $RBENV_ROOT && exit 1;}

[ $# -lt 1 ] && rbenv-help pluger && exit 1
action=$1 && shift

rbenv_root=$RBENV_ROOT
plugins_root=$RBENV_ROOT/plugins && mkdir -p $plugins_root
share_dir=$(readlink -f $(dirname $0)/../share)

function installer(){
  [ $# -lt 1 ] && rbenv-help pluger && return 1
  plugname=$1 && shift
  plugdir=$plugins_root/$plugname

  case "$1" in
    -r|--remove)
      if [ -d $plugdir ];then
        rm -fr $plugdir && echo rm plugin: $plugname
      else
        echo No $plugdir for plug: $plugname 
      fi
      ;;
    *) 
      [ -d $plugdir ] && echo Warn: already exists $plugdir && return 0
      plugfile=$share_dir/$plugname
      if [ -f $plugfile ];then
        source $plugfile 
        [ -n "$plugrepo" ] || { echo Expect variable: plugrepo && return 1;}
        git clone $plugrepo $plugins_root/$plugname 
        echo Install plug: $plugname in $plugdir
      else
        echo Require plugfile: $plugfile for plugin: $plugname
      fi
      ;;
  esac
}

case "$action" in
  l|ls|list|avaliable)
    ls -1 $share_dir
    ;;
  in|pluging|inuse|use)
    ls -1 $plugins_root
    ;;
  i|install)
    installer $@
    ;;
  rm|remove)
    installer $1 --remove
    ;;
  *)
    rbenv-help pluger
    ;;
esac
